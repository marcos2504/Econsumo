#!/usr/bin/env python3
"""
Test del servicio con fecha modificada para encontrar emails y probar alertas
"""

import sys
from datetime import datetime, timedelta

sys.path.append('/home/marcos/Escritorio/APP_E-Consumo')

from app.services.notificaciones import notificacion_service

# Modificar temporalmente el mÃ©todo para buscar desde hace mÃ¡s tiempo
def test_con_fecha_anterior():
    """Test buscando emails desde hace mÃ¡s tiempo para encontrar emails"""
    print("ðŸ§ª Test con fecha anterior para encontrar emails...")
    
    # Backup del mÃ©todo original
    metodo_original = notificacion_service.obtener_ultima_fecha_lectura
    
    # MÃ©todo modificado que busca desde hace 90 dÃ­as
    def obtener_fecha_anterior(db, user_id):
        return datetime.now() - timedelta(days=90)
    
    try:
        # Aplicar mÃ©todo modificado temporalmente
        notificacion_service.obtener_ultima_fecha_lectura = obtener_fecha_anterior
        
        print("ðŸ“… Buscando emails desde hace 90 dÃ­as...")
        resultado = notificacion_service.ejecutar_servicio_notificaciones()
        
        print(f"\nðŸ“Š Resultado con fecha anterior:")
        print(f"   ðŸ“§ Emails encontrados: {resultado['total_emails_nuevos']}")
        print(f"   ðŸ“„ Facturas procesadas: {resultado['total_facturas_procesadas']}")
        print(f"   ðŸš¨ AnomalÃ­as detectadas: {resultado['total_anomalias_detectadas']}")
        print(f"   ðŸ“¤ Alertas enviadas: {resultado['alertas_enviadas']}")
        
    finally:
        # Restaurar mÃ©todo original
        notificacion_service.obtener_ultima_fecha_lectura = metodo_original

if __name__ == "__main__":
    test_con_fecha_anterior()
